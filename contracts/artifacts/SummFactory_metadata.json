{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_summFoundation",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					}
				],
				"name": "NewSumm",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_updatedSummFoundation",
						"type": "address"
					}
				],
				"name": "changeSummFoundation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_opponent",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_softOffers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_firmOffers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_softRange",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_firmRange",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_penaltyPercent",
						"type": "uint256"
					}
				],
				"name": "createSumm",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "deployedSumms",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDeployedSumms",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SummFactory.sol": "SummFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/Summ.sol": {
			"keccak256": "0xd17dc622330c7a4b48733de781fbf73a7561ddc08d45f1a57574892fc5fbc16d",
			"license": "MIT",
			"urls": [
				"bzz-raw://3caa909f850c9e5230070d3defdd8d2267dd076e5c054d73e216bb0498727ad2",
				"dweb:/ipfs/QmQGum5oU4aQFKEPgJUvnLs7QDUvs22WSSNfb5zLorUFoM"
			]
		},
		"contracts/SummFactory.sol": {
			"keccak256": "0xa78e5ba13e3c7a029ba6b59ff0b5947062313fa1d2c37d64e15585062218e69e",
			"license": "MIT",
			"urls": [
				"bzz-raw://697cd1863847b63f23f395efdf724910ecbbfb71a17f5a8af4486f75378d7c1d",
				"dweb:/ipfs/QmXJ8CDgdtoRf2t6R8cm6keRVycmNM2w81unM1FD4nT9RR"
			]
		},
		"contracts/SummTerms.sol": {
			"keccak256": "0xa35d275c589be82dd6fc1856abd4efb97d8fe18ce921a2c53f292f9f5aefd2d2",
			"license": "MIT",
			"urls": [
				"bzz-raw://9c08b84e15e1f00b52927547497e2214848b5aee821665f35f87a9686937a802",
				"dweb:/ipfs/QmZkz3pysT5LzFgiBQ6CuMcsBMdzUPzQxaRFBViekyurTv"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d",
				"dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic"
			]
		}
	},
	"version": 1
}